==========================
Response Headers
==========================
1.	Set-Cookie используется для отправки cookies с сервера на агент пользователя. Сопсна, всё просто.

2.	Strict-Transport-Security  - заголовок ответа (часто используется аббревиатура HSTS (en-US)), позволяющий web-сайтам уведомить браузер о том,
	что доступ к ним должен быть осуществлён только посредством HTTPS вместо HTTP.
	max-age=<expire-time> - время, в секундах, которое браузер должен помнить, что сайт доступен только с помощью HTTPS.
	В общем, сколько времени защищать подключение, другие параметры не встречал.

3.	Content-Encoding - это сущность заголовка, используемая для сжатия медиа-типа. При наличии её значение определяет кодировку,
	применённую к сущности body. Это позволяет клиенту информацию как декодировать body, чтобы получить медиа-тип ссылающийся на  заголовок Content-Type.
	Сжатие делает br (Brotli).

4.	ETag является идентификатором специфической версии ресурса. Он позволяет более эффективно использовать кеш и сохраняет пропускную способность,
	позволяя серверу отправлять не весь ответ, если содержимое не изменилось. С другой стороны, если контент все-таки поменялся,
	Etag помогает предотвратить одновременное обновление ресурса от перезаписи друг друга ("воздушная коллизия").
	W/"42eaa52604673b64d6b356c2fd7f87e3" - сложная строчка делает сложные вещи.

5.	Age header - время в секундах, проведённое объектом в прокси кэше. Обычно значение близко к 0. 

6.	Nel (судя по всему, Network Error Logging) отвечает за конфигурацию логирования сети (или вроде того)

7.	Pragma - используется для обратной совместимости с кешами HTTP / 1.0, где заголовок Cache-Control отсутствует.
	Был найден в контексте Pragma: no-cache, что заставляет кеши отправлять запрос на исходный сервер для проверки перед выпуском кешированной копии.

8.	Access-Control-Max-Age сообщает браузеру насколько (в секундах Максимальное значение в Firefox составляет 24 часа (86400 секунд), в Chromium 10 минут (600 секунд))
	предзапрос может быть кеширован и опущен при запросах к серверу.

9.	Vary определяет, как сопоставить будущие заголовки запроса, чтобы решить, можно ли использовать кешированный ответ, а не запрашивать новый с исходного сервера.
	Что за "кешированный ответ" остаётся загадкой, так как не понятно, где вопрос :/

10.	P3P - Платформа для предпочтений конфиденциальности.
	Значение "CAO PSA OUR" описывает компактную политику с токенами. Слишком много непонятных слов, так что просто настройки конфиденциальности)

==========================
Request Headers
==========================
1. 	Sec-CH-UA предоставляет серверу информацию о агенте пользователя (бренд и версия).
	"Google Chrome";v="93", " Not;A Brand";v="99", "Chromium";v="93" - середина непонятная, а так понятно.
	
2.	Sec-Fetch-Dest - определяет путь назначения запроса. Я всё ещё не понимаю, что за запросы, но dest = destination.

3.	Accept указывает, какие типы контента, выраженные как MIME типы (Медиа тип / Multipurpose Internet Mail Extensions), клиент может понять.
	*/* - Любой MIME type
	
4.	Sec-Fetch-Mode - определяет режим запроса. 
	Sec-Fetch-Mode: cors - (Cross-Origin Resource Sharing) запрос через CORS протокол.

5.	Accept-Language - определяет предпочтительные языки (естественные языки).
	accept-language: ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7,ja;q=0.6 - Q определяет вес языка (предпочтительность) 
	Наконец-то что-то понятное

6.	Accept-Ranges - это маркер, который использует сервер, чтобы уведомить клиента о поддержке "запросов по кускам".
	Его значение указывает единицу измерения, которая может быть использована для определения диапазона чтения.
	accept-ranges: bytes - байты, прикольно

7.	Alt-Svc предоставляет серверу возможность отметить ресурсы, которые нужно загрузить с другого сервера.
	alt-svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443"; ma=2592000
	Вот в примере выше:
	h+циферки - ALPN-идентификатор протокола
	ma (max-age) - число секунд, которое можно использовать ресурс

8.	If-None-Match делает запрос условным (без понятия шо это). Там какое-то сложное определение с кучей букв и непонятных слов.
	Для методов GET и HEAD (я встретил пример именно такой), это используется, чтобы обновить сущность по ETag'у.
	Пример: If-None-Match: "Ss13+thrgRpT4YM8FK/3Da28nsk="

9.	Access-Control-Request-Headers используется брузерами для сообщения серверу, какие заголовки клиент должен отправить при запросе (???)
	access-control-request-headers: authorization,content-type,x-reddit-loid,x-reddit-session

10.	Access-Control-Request-Method используется брузерами для сообщения серверу, какой метод будет использован при запросе (???)
	access-control-request-method: POST
